Editor Features:

MOF File:
 Import mofs from mm3d.

Look into that stupid MWD saving bug. Why does it work on 1.8.0_111, 1.8.0_144, 1.8.0_172, and 1.8.0_181, but not 1.8.0_161, or 1.8.0_201? The broken ones appear to use less RAM, and have spikes when viewing the map.
See if anything can be done about using the swamp VLO as a texture for 3D things. It seems some laptop computers do not like this and display everything as black with a message in the console.
Eventually have some method which can allocate space into an executable at a given space so we could for instance add a new level into the level selector. This would need to modify pointers.

Eventually:
 - Stop hardcoding things we can avoid, from file names to ids. For instance, replace the automatic ISLAND.MAP remap with an option that lets you select a remap to apply. Could be supplied, could be user-made. Would also allow things like exporting the remap from the demo, and applying the remap to the PC release.
 - On major release, profile loading files, saving files, using map editors. There are occasional viewer spikes after adding 3d models to the view, and in the MOF view, when looking at animations, every so often one frame will be extra long due to a GC.

Issues / Features:
 - PP20 compressor is not very efficient. Could we make an algorithm that is as good as the original one? Disassemble the original packer.
 - Entities need some kind of height offset in the map viewer. Figure out how the game figures out this height thing.
 - Full PSX VLO Support. (Missing support certain types of images, stuff like gold frog textures are wonky, and bugs should have textures in the viewer)
 - Support entity data fully on things like PS1 demo, prototype, etc.
 - Alt tabbing can break the keypress handler in editors, for instance it can keep moving if you were holding W, or it always applies the alt speed boost.
 - A scripting system would be really nice, probably JS, along with a place to type in code. It would make on the fly debugging and testing much easier.

UI Plans:
 - VRAM Editor kinda stinks. It would be nice to try and create a system to generate this automatically, or maybe show boundaries of other texture banks.
 - Formbook editor should have flags be checkmarks, not just a flat number.
 - Image padding editor should be more clean and use sliders.
 - MOF animation viewer could use a slider too, which resets upon reaching the end.

Map Editor:
 - Add polygons.
 - The grid viewer should support selecting multiple tiles and allow mass grid flag editing. It should also be able to fit on smaller screens.
 - Animation editor. Maybe select from a list of animations? You could watch the animation, edit it, and apply it. Everything you can now but organized better. Support UV editing too.
 - TODO: Go over entity data editors, make sure they're all functional, and choose a proper editor for them.
 - Adding entities: Have a selector that lets you pick the entity type you want to make, instead of cloning the current one. The camera should focus in on the new entity at the very least, if we can't let the user decide where to place it. We could disable the create entity button if there is no tile selected (tile must be under a path if it's a path entity)
 - Form Resizing? General resizing of fixed size things?
 - Light application should be a checkbox, not a button. It should update if you update the lights.
 - Adding lights could be done with a drop-down type menu.
 - Go over map editors to make sure everything can be updated as well as saved.
 - Path editor can also use a drop-down type selector for adding paths.
 - Path editor shows selected path, which updates as you update the path information.
 - Path editor needs to be fully editable. Add spline data and verify other types are editable.